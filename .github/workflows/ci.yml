name: CI

env:
    DJANGO_SETTINGS_MODULE: "config.settings.test"
    POETRY_VERSION: 1.4.1
    PYTHON_VERSION: 3.11.3
    NODE_VERSION: 19
    PNPM_VERSION: 8.3.1

on:
    pull_request:
        branches: [ "main" ]

    push:
        branches: [ "main" ]

concurrency:
    group: ${{ github.head_ref || github.run_id }}
    cancel-in-progress: true

jobs:
    prepare:
        runs-on: ubuntu-latest
        outputs:
            frontend-changed: ${{ steps.changed-files-frontend.outputs.any_changed }}
            backend-changed: ${{ steps.changed-files-backend.outputs.any_changed }}
        steps:
            -   name: Checkout Code Repository
                uses: actions/checkout@v3
                with:
                    fetch-depth: 2  # OR "2" -> To retrieve the preceding commit.

            -   name: Get changed files in the frontend folder
                id: changed-files-frontend
                uses: tj-actions/changed-files@v35
                with:
                    files: frontend/**
                    since_last_remote_commit: true

            -   name: Get changed files in the backend folder
                id: changed-files-backend
                uses: tj-actions/changed-files@v35
                with:
                    files: backend/**
                    since_last_remote_commit: true

    lint-backend:
        needs: prepare
        if: needs.prepare.outputs.backend-changed == 'true'
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout Code Repository
                uses: actions/checkout@v3
            -   name: Build
                uses: ./.github/actions/backend-action
            -   name: Ruff
                run: |
                    poetry run ruff check --format=github $(git ls-files '*.py')
            -   name: Black
                run: |
                    cd backend
                    poetry run black --check $(git ls-files '*.py')
            -   name: Isort
                run: |
                    cd backend
                    poetry run isort --check-only --profile black $(git ls-files '*.py')
    #            -   name: Mypy TODO: Fix mypy errors
    #                run: |
    #                    cd backend
    #                    poetry run mypy $(git ls-files '*.py')
    test-backend:
        needs: lint-backend
        if: needs.prepare.outputs.backend-changed == 'true'
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout Code Repository
                uses: actions/checkout@v3

            -   name: Build
                uses: ./.github/actions/backend-action
            -   name: Run DB Migrations
                run: |
                    cd backend
                    poetry run python manage.py migrate
            -   name: Run Django Tests
                run: |
                    cd backend
                    poetry run pytest

    lint-frontend:
        needs: prepare
        if: needs.prepare.outputs.frontend-changed == 'true'
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout Code Repository
                uses: actions/checkout@v3
            -   name: Build
                uses: ./.github/actions/frontend-action
            -   name: Lint
                run: |
                    cd frontend
                    pnpm run lint:ci
